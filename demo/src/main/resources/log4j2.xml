<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN"  monitorInterval="300"><!-- 每隔300秒重新读取配置文件，对web应用很实用 -->
    <properties><!-- 定义常量 -->
        <property name="LOG_HOME">D://logs/log</property>
        <property name="FILE_NAME">test</property>  
    </properties>  
    
    <Appenders>
    	<!-- 日志输出格式 ：<Console是控制台,<File是文件,<RollingRandomAccessFile按时间和文件大小生成多个日志,<JDBC是数据库,<Async异步-->  
    	<!-- RollingRandomAccessFile 
        TimeBasedTriggeringPolicy interval="1"一个最小时间单位生成一个文件
        SizeBasedTriggeringPolicy size="1 MB" 当文件大小超过1MB生成一个日志文件，你可以写成0.001MB实验一下效果
        DefaultRolloverStrategy max="2" 同一个时间节点最多生成2个日志文件，否则后面的覆盖前面的，如1分钟10MB,允许2个，则最终是第9MB和第10MB的日志存在 时间节点-index(1,2)
         -->
        <RollingRandomAccessFile name="toFileByRoll"  
            fileName="${LOG_HOME}/${FILE_NAME}.log"  
            filePattern="${LOG_HOME}/${date:yyyy-MM}/${FILE_NAME}-%d{yyyy-MM-dd HH-mm}-%i.log">  
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n" />  
            <Policies>  
                <TimeBasedTriggeringPolicy interval="1" />
                <SizeBasedTriggeringPolicy size="0.001 MB" />  
            </Policies>  
            <DefaultRolloverStrategy max="2" />  
        </RollingRandomAccessFile>
    </Appenders>  
    
    <Loggers><!-- 日志类别 --> 
    	<!-- 定义根日志类别  查看level http://blog.csdn.net/techq/article/details/6636287--> 
        <Root level="trace">  
            <AppenderRef ref="toFileByRoll" />
        </Root>
        <!-- 按照时间节点和文件大小滚动生成日志 -->
    	<Logger name="mylogtofileroll" additivity="false" level="TRACE"><!--additivity="false" 不再输出父级日志  -->
    		<AppenderRef ref="toFileByRoll" />
    	</Logger>  
    </Loggers> 
</Configuration>  